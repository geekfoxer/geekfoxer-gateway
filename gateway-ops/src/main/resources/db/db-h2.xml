<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://mybatis.org/schema/mybatis-spring
                        http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <mybatis:scan base-package="com.geekfoxer.gateway.dao.dao" factory-ref="sqlSessionFactory"/>

    <!-- 创建SqlSessionFactory -->
    <bean id="sqlSessionFactory" name="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean" primary="true">
        <property name="dataSource" ref="h2DataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="typeAliasesPackage" value="com.geekfoxer.gateway.dao.domain"/>
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" primary="true">
        <property name="dataSource" ref="h2DataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--<jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:/sql/schema.sql" />
        <jdbc:script location="classpath:/sql/data.sql" />
    </jdbc:embedded-database>-->

    <bean id="h2DataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close" primary="true">
        <property name="url" value="jdbc:h2:file:./data/DatewayDB;MODE=MySql;DB_CLOSE_DELAY=-1" />
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="username" value="sa" />
        <property name="password" value="sa" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <!--<property name="validationQuery" value="select count(1)" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="connectProperties">
            <props>
                <prop key="druid.stat.logSlowSql">true</prop>
            </props>
        </property>-->
        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean="stat-filter" />-->
            <!--</list>-->
        <!--</property>-->
    </bean>

    <!--<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">-->
        <!--<property name="slowSqlMillis" value="${druid_slowSqlMillis}" />-->
        <!--<property name="logSlowSql" value="${druid_logSlowSql}" />-->
        <!--<property name="mergeSql" value="${druid_mergeSql}" />-->
    <!--</bean>-->

</beans>