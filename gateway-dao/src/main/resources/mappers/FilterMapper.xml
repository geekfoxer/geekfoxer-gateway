<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.geekfoxer.gateway.dao.dao.FilterDao">

	<select id="get" resultType="com.geekfoxer.gateway.dao.domain.FilterDO">
		select
		`id`,`name`,`describe`,`in_or_out`,`filter_type`,`rule`,`api_id`,`group_id`,`gmt_create`,`gmt_modified`
		from gateway_filter
		where id = #{value}
	</select>


	<select id="loadByApiId" resultType="com.geekfoxer.gateway.dao.domain.FilterDO">
		select
		`id`,`name`,`describe`,`in_or_out`,`filter_type`,`rule`,`api_id`,`group_id`,`gmt_create`,`gmt_modified`
		from gateway_filter
		where api_id = #{apiId}
	</select>

	<select id="loadByGroupId" resultType="com.geekfoxer.gateway.dao.domain.FilterDO">
		select
		`id`,`name`,`describe`,`in_or_out`,`filter_type`,`rule`,`api_id`,`group_id`,`gmt_create`,`gmt_modified`
		from gateway_filter
		where group_id = #{groupId}
	</select>

	<select id="loadCommon" resultType="com.geekfoxer.gateway.dao.domain.FilterDO">
		select
		`id`,`name`,`describe`,`in_or_out`,`filter_type`,`rule`,`api_id`,`group_id`,`gmt_create`,`gmt_modified`
		from gateway_filter
		where (api_id = null or api_id = 0) and (group_id =
		null or group_id=0)
	</select>

	<select id="list" resultType="com.geekfoxer.gateway.dao.domain.FilterDO">
		select
		`id`,`name`,`describe`,`filter_type`,`in_or_out`,`rule`,`api_id`,`group_id`,`gmt_create`,`gmt_modified`
		from gateway_filter
		<where>
			<if test="id != null and id != ''"> and `id` = #{id} </if>
			<if test="filterType != null"> and `filter_type` = #{filterType} </if>
			<if test="apiId != null and apiId != ''"> and `api_id` = #{apiId} </if>
			<if test="groupId != null and groupId != ''"> and `group_id` = #{groupId} </if>
			<if test="sharerule != null"> and `api_id` is null and `group_id` is null </if>
			<if test="bizrule != null"> and (`api_id` is not null or `group_id` is not null)
			</if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from gateway_filter
		<where>
			<if test="id != null and id != ''"> and `id` = #{id} </if>
			<if test="filterType != null"> and `filter_type` = #{filterType} </if>
			<if test="apiId != null and apiId != ''"> and `api_id` = #{apiId} </if>
			<if test="groupId != null and groupId != ''"> and `group_id` = #{groupId} </if>
			<if test="sharerule != null"> and `api_id` is null and `group_id` is null </if>
			<if test="bizrule != null"> and (`api_id` is not null or `group_id` is not null)
			</if>
		</where>
	</select>

	<insert id="save" parameterType="com.geekfoxer.gateway.dao.domain.FilterDO"
		useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into gateway_filter
		(
		`name`,
		`describe`,
		`in_or_out`,
		`filter_type`,
		`rule`,
		`api_id`,
		`group_id`,
		`gmt_create`,
		`gmt_modified`
		)
		values
		(
		#{name},
		#{describe},
		#{inOrOut},
		#{filterType},
		#{rule},
		#{apiId},
		#{groupId},
		sysdate(),
		sysdate()
		)
	</insert>

	<update id="update" parameterType="com.geekfoxer.gateway.dao.domain.FilterDO">
		update gateway_filter
		<set>
			<if test="filterType != null"> `filter_type` = #{filterType},</if>
			<if test="apiId != null and apiId != ''"> `api_id` = #{apiId},</if>
			<if test="groupId != null and groupId != ''"> `group_id` = #{groupId},</if>
			<if test="name != null and name != ''"> `name` = #{name},</if>
			<if test="describe != null and describe != ''"> `describe` = #{describe},</if>
			<if test="rule != null and rule != ''"> `rule` = #{rule},</if>
			`gmt_modified`=sysdate()
		</set>
		where id = #{id}
	</update>

	<delete id="remove">
		delete from gateway_filter where id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from gateway_filter where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
</mapper>